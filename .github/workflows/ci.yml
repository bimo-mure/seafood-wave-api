name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mongodb-version: ['4.2', '4.4', '5.0', '6.0']

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}
        mongodb-username: ${{ secrets.MONGODB_USERNAME }}
        mongodb-password: ${{ secrets.MONGODB_PASSWORD }}
        mongodb-db: ${{ secrets.MONGODB_DB }}

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Build and Push Docker Image
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: bimomure/seafood-wave-api
        tags: latest
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Google Auth
      id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}
        token_format: access_token

    - name: Docker Auth to Google Cloud Artifact
      id: docker-auth
      uses: docker/login-action@v1
      with:
        username: _json_key_base64
        password: ${{ secrets.GCP_CREDENTIALS }}
        registry: ${{ vars.GCP_REGION }}-docker.pkg.dev

    - name: Pull Docker Image
      run: docker pull ${{ vars.DOCKER_IMAGE_NAME }}:latest

    - name: Tag Docker Image
      run:  docker tag ${{ vars.DOCKER_IMAGE_NAME }}:latest ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GCP_REPOSITORY }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.sha }}

    - name: Push Docker Image to to Artifact Registry
      run: docker push ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GCP_REPOSITORY }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.sha }}


    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v1
      with:
        service: ${{ vars.GCP_SERVICE }}
        region: ${{ vars.GCP_REGION }}
        image: ${{ vars.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ vars.GCP_REPOSITORY }}/${{ vars.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        no_traffic: true

    - name: Show Output
      run: echo ${{ steps.build-and-deploy.outputs.url }}

